{"version":3,"sources":["pages/Chat/ChatPage.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["Chat","dispatch","useDispatch","useEffect","startMessagesListening","stopMessagesListening","Messages","obj","TypeError","mappedMessages","useSelector","state","chat","messages","map","m","i","message","style","height","overflowY","Message","src","photo","alt","width","userName","AddMessageForm","useState","setMessage","value","onChange","e","currentTarget","disabled","onClick","sendMessage","ChatPage","isAuth","auth","to"],"mappings":"qMAwBMA,EAAW,WAEb,IAAMC,EAAWC,cASjB,OARAC,qBAAU,WAEN,OADAF,EAASG,eACF,WACHH,EAASI,kBAEd,IAIC,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,QAKNC,EAAqB,SAAC,IC3Cb,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCD0CD,IAClC,IAEMC,EAFWC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKC,YAEjCC,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAAC,EAAD,CAASC,QAASF,GAAQC,MAExE,OACI,qBAAKE,MAAO,CAAEC,OAAQ,QAASC,UAAW,QAA1C,SACKX,KAMPY,EAA4C,SAAC,GAAiB,IAAfJ,EAAc,EAAdA,QACjD,OACI,gCACI,qBAAKK,IAAKL,EAAQM,MAAOC,IAAI,GAAGN,MAAO,CAAEO,MAAO,UADpD,IACiE,4BAAIR,EAAQS,WACzE,uBACCT,EAAQA,QACT,2BAMNU,EAA0B,WAAO,IAAD,EACJC,mBAAS,IADL,mBAC3BX,EAD2B,KAClBY,EADkB,OAEID,mBAA8B,WAFlC,mBAG5B3B,GAH4B,UAGjBC,eAQjB,OACI,qCACI,8BACI,0BAAU4B,MAAOb,EAASc,SAAU,SAACC,GAAD,OAAOH,EAAWG,EAAEC,cAAcH,YAE1E,8BACI,wBAAQI,UAAU,EAAOC,QAXV,WAClBlB,IACLhB,EAASmC,YAAYnB,IACrBY,EAAW,MAQH,wBAMDQ,UAjFM,WACjB,IAAMC,EAAS5B,aAAmC,SAAAC,GAAK,OAAIA,EAAM4B,KAAKD,UACtE,OACI,mCACKA,EAEG,cAAC,EAAD,IAEA,cAAC,IAAD,CAAUE,GAAI","file":"static/js/5.e2736072.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { ChatMessageType } from \"../../api/chat-api\";\r\nimport { sendMessage, startMessagesListening, stopMessagesListening } from \"../../redux/chat-reducer\";\r\nimport { AppStateType } from './../../redux/redux-store'\r\n\r\n\r\n\r\n\r\nconst ChatPage: FC = () => {\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\r\n    return (\r\n        <>\r\n            {isAuth\r\n                ?\r\n                <Chat />\r\n                :\r\n                <Redirect to={'/login'} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Chat: FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Messages />\r\n            <AddMessageForm  />\r\n        </>\r\n    )\r\n}\r\n\r\nconst Messages: FC<{  }> = ({  }) => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n\r\n    const mappedMessages = messages.map((m, i) => <Message message={m} key={i} />)\r\n\r\n    return (\r\n        <div style={{ height: '400px', overflowY: 'auto' }}>\r\n            {mappedMessages}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Message: FC<{ message: ChatMessageType }> = ({ message }) => {\r\n    return (\r\n        <div>\r\n            <img src={message.photo} alt='' style={{ width: '30px' }} /> <b>{message.userName}</b>\r\n            <br />\r\n            {message.message}\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageForm: FC<{ }> = () => {\r\n    const [message, setMessage] = useState('')\r\n    const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending')\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) return\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <textarea value={message} onChange={(e) => setMessage(e.currentTarget.value)}></textarea>\r\n            </div>\r\n            <div>\r\n                <button disabled={false} onClick={sendMessageHandler}>send</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatPage","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}